using System;
using System.Collections.Generic;
using System.IO;
using System.Text;
using YamlDotNet.Serialization;
using YamlDotNet.Serialization.NamingConventions;

namespace TP5
{
    public class Configuration
    {
        public static readonly double[][] FONT_SET = new double[32][] {
            new double[] {0x0e, 0x11, 0x17, 0x15, 0x17, 0x10, 0x0f},   // 0x40, @
            new double[] {0x04, 0x0a, 0x11, 0x11, 0x1f, 0x11, 0x11},   // 0x41, A
            new double[] { 0x1e, 0x11, 0x11, 0x1e, 0x11, 0x11, 0x1e },   // 0x42, B
            new double[] { 0x0e, 0x11, 0x10, 0x10, 0x10, 0x11, 0x0e },   // 0x43, C
            new double[] { 0x1e, 0x09, 0x09, 0x09, 0x09, 0x09, 0x1e },   // 0x44, D
            new double[] { 0x1f, 0x10, 0x10, 0x1c, 0x10, 0x10, 0x1f },   // 0x45, E
            new double[] { 0x1f, 0x10, 0x10, 0x1f, 0x10, 0x10, 0x10 },   // 0x46, F
            new double[] { 0x0e, 0x11, 0x10, 0x10, 0x13, 0x11, 0x0f },   // 0x37, G
            new double[] { 0x11, 0x11, 0x11, 0x1f, 0x11, 0x11, 0x11 },   // 0x48, H
            new double[] { 0x0e, 0x04, 0x04, 0x04, 0x04, 0x04, 0x0e },   // 0x49, I
            new double[] { 0x1f, 0x02, 0x02, 0x02, 0x02, 0x12, 0x0c },   // 0x4a, J
            new double[] { 0x11, 0x12, 0x14, 0x18, 0x14, 0x12, 0x11 },   // 0x4b, K
            new double[] { 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x1f },   // 0x4c, L
            new double[] { 0x11, 0x1b, 0x15, 0x11, 0x11, 0x11, 0x11 },   // 0x4d, M
            new double[] { 0x11, 0x11, 0x19, 0x15, 0x13, 0x11, 0x11 },   // 0x4e, N
            new double[] { 0x0e, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0e },   // 0x4f, O
            new double[] { 0x1e, 0x11, 0x11, 0x1e, 0x10, 0x10, 0x10 },   // 0x50, P
            new double[] { 0x0e, 0x11, 0x11, 0x11, 0x15, 0x12, 0x0d },   // 0x51, Q
            new double[] { 0x1e, 0x11, 0x11, 0x1e, 0x14, 0x12, 0x11 },   // 0x52, R
            new double[] { 0x0e, 0x11, 0x10, 0x0e, 0x01, 0x11, 0x0e },   // 0x53, S
            new double[] { 0x1f, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04 },   // 0x54, T
            new double[] { 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0e },   // 0x55, U
            new double[] { 0x11, 0x11, 0x11, 0x11, 0x11, 0x0a, 0x04 },   // 0x56, V
            new double[] { 0x11, 0x11, 0x11, 0x15, 0x15, 0x1b, 0x11 },   // 0x57, W
            new double[] { 0x11, 0x11, 0x0a, 0x04, 0x0a, 0x11, 0x11 },   // 0x58, X
            new double[] { 0x11, 0x11, 0x0a, 0x04, 0x04, 0x04, 0x04 },   // 0x59, Y
            new double[] { 0x1f, 0x01, 0x02, 0x04, 0x08, 0x10, 0x1f },   // 0x5a, Z
            new double[] { 0x0e, 0x08, 0x08, 0x08, 0x08, 0x08, 0x0e },   // 0x5b, [
            new double[] { 0x10, 0x10, 0x08, 0x04, 0x02, 0x01, 0x01 },   // 0x5c, \\
            new double[] { 0x0e, 0x02, 0x02, 0x02, 0x02, 0x02, 0x0e },   // 0x5d, ]
            new double[] { 0x04, 0x0a, 0x11, 0x00, 0x00, 0x00, 0x00 },   // 0x5e, ^
            new double[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f }   // 0x5f, _
        };
        public string TrainingInput { get; set; }
        public string Activation { get; set; } = "nonlinear";
        public double LearningRate { get; set; } = 0.1;
        public int Epochs { get; set; }
        public int Batch { get; set; } = 1;
        public int[] Layers { get; set; } = null;
        public double MinError { get; set; } = 0.0;
        public bool AdaptiveLearningRate { get; set; } = false;
        public bool Momentum { get; set; } = false;
        public double MomentumAlpha { get; set; } = 0.8;
        public int ExerciseTest { get; set; } = 1;

        public static Configuration FromYamlFile(string path)
        {
            var deserializer = new DeserializerBuilder()
                .WithNamingConvention(UnderscoredNamingConvention.Instance)
                .Build();
            return deserializer.Deserialize<Configuration>(File.OpenText(path));
        }
        public Configuration() { }
    }
}
